@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<div class="nav-container">
    <div class="nav-brand">
        <a href="/" class="nav-link">
            <span class="nav-title">MedConsulta</span>
        </a>
    </div>
    <div class="nav-links">
        <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
            <span class="nav-text">Home</span>
        </NavLink>
        <NavLink class="nav-link" href="/medicos">
            <span class="nav-text">MÃ©dicos</span>
        </NavLink>
        <NavLink class="nav-link" href="/consultas">
            <span class="nav-text">Consultas</span>
        </NavLink>
        <AuthorizeView>
            <Authorized>
                <button class="nav-button" @onclick="Logout">Sair</button>
            </Authorized>
            <NotAuthorized>
                <NavLink class="nav-link" href="/login">
                    <span class="nav-text">Login</span>
                </NavLink>
            </NotAuthorized>
        </AuthorizeView>
    </div>
</div>

@code {
    private async Task Logout()
    {
        // Clear local storage
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "authToken");
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "userType");
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "userId");
        
        // Redirect to login
        NavigationManager.NavigateTo("/login");
    }
}